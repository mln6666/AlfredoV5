@model MinimercadoAlfredo.ViewModels.CreatePurchaseVM

@{
    ViewBag.Title = "Editar Compra";
}

<h2 class="text-center">Editar Compra</h2>
<hr style="color:grey;border-color:grey" />
@Html.HiddenFor(model => model.Purchase.IdPurchase)
<table class="table table-condensed table-striped table-bordered">
    <thead>
        <tr class="text-center" style="color: black; font-weight: bold; background-color: lightsteelblue">
            <th style="width: 110px">
                N° Venta
            </th>
            <th>
                Proveedor
            </th>
            <th>
                Dirección
            </th>
            <th>
                Fecha de Compra
            </th>

        </tr>
    </thead>
    <tbody>
        <tr style="background-color: white">
            <td class="text-center" style="color: black">
                @Html.DisplayFor(model => model.Purchase.IdPurchase)
            </td>
            <td>
                <select class="js-example-basic-single inputForm" id="providerid" style="width: 100%" onchange="changeprov(value)">
                    <option value="@Model.Purchase.IdProvider">@Model.Purchase.Provider.ProviderName</option>
                    @foreach (var item in Model.Providers)
                    {
                        if (item.IdProvider != Model.Purchase.IdProvider)
                        {
                            <option value="@item.IdProvider">@item.ProviderName</option>
                        }
                    }
                </select>

            </td>
            <td>
                <input type="text" id="provideraddress" value="@Model.Purchase.Provider.ProviderAddress" style="border-color: transparent" readonly="readonly"/>
            </td>
            <td style="color: black">
                <input id="Date" name="Date" type="date" readonly="readonly" class="form-control" value="@Model.Purchase.PurchaseDate.ToString("dd/MM/yyyy")" style="text-align: center" />
            </td>

        </tr>
    </tbody>
</table>
<h3 class="text-center">Lista de Productos</h3>
<hr style="color: grey; border-color: grey" />

<table class="table table-condensed table-bordered" id="productTable" style="background-color: white">
    <thead>
        <tr class="text-center" style="color: black; font-weight: bold; background-color: lightsteelblue">
            
            <td>
                Producto
            </td>
            
            <td style="width: 16%">
                Cantidad
            </td>
            <td style="width: 16%">
                Costo
            </td>
            <td style="width: 17%">
                Subtotal
            </td>
        </tr>
    </thead>

    <tbody id="insert">
        <tr>
            <td style="background-color: #a0cee8">
                <select class="js-example-basic-single inputForm" id="linedescription" onchange="addproduct(this.value)" oninput="addproduct(this.value)" style="width: 100%">
                    <option value="0">Seleccionar Producto...</option>
                    @foreach (var item in Model.Products)
                    {
                        if (item.IdTrademark != null)
                        {
                            <option value="@item.IdProduct">@item.IdProduct - @item.ProductDescription - @item.Trademark.TrademarkName</option>
                        }
                        else
                        {
                            <option value="@item.IdProduct">@item.IdProduct - @item.ProductDescription</option>
                        }
                    }
                </select>
                <span id="spanproducto" style="color:red"></span>
            </td>
            <td style="background-color: #a0cee8">
                <input type="number" class="panel-info form-control inputForm" value="1" id="linequantity" onFocus="this.select()" onchange="totallinea()" oninput="totallinea()" onkeypress="solonumerosptocoma()" style="width: 100%" />
                <span id="spanquantity" style="color:red"></span>
            </td>
            <td style="background-color: #a0cee8">
                <input type="text" class="panel-info form-control inputForm" id="linecost" onFocus="this.select()" onchange="totallinea()" oninput="totallinea()" onkeypress="solonumerosptocoma()" style="width: 100%"/>
                <span id="spancost" style="color:red"></span>
            </td>
            <td class="text-center" style="background-color: #a0cee8">
                <input type="text" class="panel-info text-center form-control fina" value="0.00" id="linetotal" readonly="readonly" style="width: 100%; font-weight: bold" />
            </td>
            <td class="text-center" style="width: 2%; background-color: #a0cee8">
                <button type="button" id="add" class="btn btn-success btn-xs" value="Agregar" style="bottom: auto"><span class="glyphicon glyphicon-plus"></span></button>
            </td>
        </tr>

    @foreach (var item in Model.Purchase.PurchaseLines)
    {
        <tr>
            <td>
                @{
                    var x = "";
                    if (item.Product.IdTrademark != null)
                    {
                        x = item.IdProduct.ToString() + " - " + item.Product.ProductDescription + " - " + item.Product.Trademark.TrademarkName;
                    }
                    else
                    {
                        x = item.IdProduct.ToString() + " - " + item.Product.ProductDescription;
                    }

                    <input id="@("itemid" + item.IdProduct)" type="text" name="productid" value="@item.IdProduct" class="hidden" />
                    <input type="text" value="@x" style="border: none; background-color: transparent; width: 100%; text-align: left; margin-left: 2%" readonly="readonly" />
                }
            </td>
            <td class="text-center">
                <input id="@("itemquantity" + @item.IdProduct)" name="productquantity" type="number" value="@item.LineQuantity" class="panel-info text-center form-control fina" onchange="CalcSubtotal(@item.IdProduct); ValidLine(@item.IdProduct);" oninput="CalcSubtotal(@item.IdProduct); ValidLine(@item.IdProduct);" onfocus="CalcSubtotal(@item.IdProduct); ValidLine(@item.IdProduct);" style="text-align: center; width: 100%; font-weight: bold"/>
            </td>
            <td class="text-center">
                <input id="@("itemcost" + @item.IdProduct)" name="productcost" type="number" value="@item.LinePrice" class="panel-info text-center form-control fina" min="1" onchange="CalcSubtotal(@item.IdProduct)" oninput="CalcSubtotal(@item.IdProduct)" onfocus="CalcSubtotal(@item.IdProduct)" style="text-align: center; width: 100%; font-weight: bold"/>
            </td>

            <td class="text-center">
                <input id="@("itemsubtotal" + @item.IdProduct)" name="productsubtotal" type="text" class="panel-info text-center form-control fina" value="@item.LineTotal" readonly="readonly" style="text-align: center; width: 100%; font-weight: bold"/>
            </td>
            <td class="text-center" style="width: 2%">
                <button id="@("elim" + @item.IdProduct)" class="btn btn-danger btn-xs" onclick="deleteProduct(@item.IdProduct)"><span class="glyphicon glyphicon-remove"></span></button>
            </td>
        </tr>
    }
    </tbody>
    <tr id="total">
        <td style="border-color: transparent"></td>
        <td style="border-color: transparent"></td>
        <th style="border-color: transparent; text-align: center; background-color: khaki">TOTAL</th>
        <th class="text-center" style="text-align: center; background-color: khaki">
            <input type="text" id="totalgral" class="panel-info text-center form-control fina" value="@Model.Purchase.PurchaseTotal" readonly="readonly" style="font-weight: bold" />
        </th>
    </tr>
</table>
<span id="spanquantitytable" style="color: red"></span>
<span id="spancosttable" style="color: red"></span>
<span id="spandiscounttable" style="color: red"></span>
<table class="table table-condensed table-striped table-bordered">
    <thead>
        <tr class="text-center" style="color: black; font-weight: bold; background-color: lightsteelblue">
            <td>
                Comentarios
            </td>
            
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>
                <input type="text" id="purchasecomments" value="@Model.Purchase.Comments" width="100%"/>
            </td>
        </tr>
    </tbody>
</table>
<hr style="color: grey" />
<div style="width: 100%; display: flex">
    <div style="width: 25%; text-align: left">
        <a href="@Url.Action("Index", "Purchases")" class="btn btn-primary btn-md"><span class="glyphicon glyphicon-hand-left " aria-hidden="true"></span>&nbsp; Volver</a>
    </div>
    <div style="width: 50%; text-align: center">
        <button type="button" id="guardar" class="btn btn-success btn-md " value="Guardar">
            Guardar &nbsp;<span class="glyphicon glyphicon-floppy-disk"></span>
        </button>
    </div>
    <div style="width: 25%"></div>
</div>

<link href="@Url.Content("~/Content/Select2/select2.min.css")" rel="stylesheet" />
@section scripts{
    <script src="@Url.Content("~/Content/Select2/select2.js")"></script>
    <script src="@Url.Content("~/Scripts/solonumerosptocoma.js")"></script>
    <script src="@Url.Content("~/Scripts/solonumeros.js")"></script>
    <script>
        $(document).ready(function() {
            //$('#Date').datepicker();

            $(".js-example-basic-single").select2();
        });

        //$("#mostrar").click(function () {
        //    $("#mostrar").hide("slow");
        //    $("#nuevalinea").toggle("slow");

        //});
        //$("#ocultar").click(function () {
        //    $("#nuevalinea").toggle("slow");
        //    $("#mostrar").toggle("slow");
        //});

        //CARGA AUTOMÁTICA DE DIRECCIÓN DE CLIENTE

        function changeprov(idprovider) {
            var options = {};
            options.url = '@Url.Action("Getproviderdata", "Purchases")';
            options.type = "GET";
            options.data = { "prov": idprovider };
            options.dataType = "json";
            options.success = function(data) {
                $('#provideraddress').val(data);
            };
            $.ajax(options);
        }

        //CARGA AUTOMATICA DE CAMPOS DE LINEA DE PRODUCTO

        function addproduct(x) {
            if (x == 0) {
                $('#spanproducto').text("Es necesario completar el campo Producto");

                document.getElementById("linecost").value = "0.00";
                document.getElementById("linetotal").value = "0.00";
            } else {
                $('#spanproducto').text("");

                var options = {};
                options.url = '@Url.Action("Getproductdata", "Purchases")';
                options.type = "GET";
                options.data = { "pro": $("#linedescription").val() };
                options.dataType = "json";
                options.success = function (data) {
                    document.getElementById("linecost").value = data;
                    var cost = parseFloat($('#linecost').val());
                    var quantity = parseFloat($('#linequantity').val());
                    var total = (cost * quantity);
                    document.getElementById("linetotal").value = total.toFixed(2);

                };
                $.ajax(options);
            }
        }

        //VALIDACIONES PARA INGRESAR UN NUEVO PRODUCTO

        function totallinea() {
            var isAllValid = true;

            if ($('#linedescription').val() != 0) {

                if ($('#linecost').val() == 0 | $('#linecost').val().trim() == '') {
                    isAllValid = false;
                    $('#spancost').text("No se puede comprar un Producto por $0.00, para realizar esta operación se recomienda realizar un alta de Productos en masa");
                    document.getElementById("linetotal").value = "0.00";
                } else {
                    $('#spancost').text("");
                }

                if ($('#linequantity').val() < 1) {
                    isAllValid = false;
                    $('#spanquantity').text("La cantidad debe ser mayor a cero");
                    document.getElementById("linetotal").value = "0.00";

                } else {
                    $('#spanquantity').text("");
                }

            } else {
                isAllValid = false;
            }


            if (isAllValid) {
                var cost = parseFloat($('#linecost').val());
                var quantity = parseFloat($('#linequantity').val());
                var total = (cost * quantity);
                document.getElementById("linetotal").value = total.toFixed(2);
            }
        }

        //BOTÖN PÄRA AGREGAR UN NUEVO PRODUCTO
        $('#add').click(function() {
            var isAllValid = true;

            if ($('#linedescription').val() == 0) {
                isAllValid = false;
                $('#spanproducto').text("Es necesario completar el campo Producto");
            } else {
                $('#spanproducto').text("");

                if ($('#linequantity').val() < 1 | $('#linequantity').val().trim() == '') {
                    isAllValid = false;
                    $('#spanquantity').text("La cantidad debe ser mayor a cero");
                } else {
                    $('#spanquantity').text("");
                }

                if ($('#linecost').val() == 0 | $('#linecost').val().trim() == '') {
                    isAllValid = false;
                    $('#spancost').text("No se puede comprar un Producto por $0.00, para realizar esta operación se recomienda realizar un alta de Productos en masa");
                } else {
                    $('#spancost').text("");
                }

                var exist = prodexist($('#linedescription').val());
                if (exist) {
                    $('#spanproducto').text("");
                } else {
                    $('#spanproducto').text("El Producto que intenta agregar ya existe en la Lista de Productos");
                    isAllValid = false;
                }
            }

            if (isAllValid) {

                //ACA INSERTAMOS EL HTML DEL NUEVO PRODUCTO A LA LISTA

                var idproduct = $('#linedescription').val();
                $('#insert').append('<tr id="inserttd'+idproduct+'"></tr>');

                $('#inserttd' + idproduct).append('<td><input id="itemid' + idproduct + '" name="productid" value="'+ idproduct +'" class="hidden" /><input id="desc'+ idproduct +'" type="text" value="'+ idproduct.toString() +'" style="border: none; background-color: transparent; width: 100%; text-align: left; margin-left: 2%" readonly="readonly" /></td>');

                var options = {};
                options.url = '@Url.Action("Getproductdescription", "Sales")';
                options.type = "POST";
                options.data = { "pro": $('#linedescription').val() };
                options.dataType = "JSON";
                options.success = function (data) {

                    var description = "";

                    if (data.trademark != "") {
                        description = idproduct.toString() + " - " + data.product + " - " + data.trademark;
                    } else {
                        description = idproduct.toString() + " - " + data.product;
                    }

                    $('#desc' + idproduct).val(description);
                };
                $.ajax(options);


                $('#inserttd' + idproduct).append('<td class="text-center"><input id="itemquantity' + idproduct + '" name="productquantity" type="number" min="0" class="panel-info text-center form-control fina" onchange="CalcSubtotal(' + idproduct + '); ValidLine(' + idproduct + ');" oninput="CalcSubtotal(' + idproduct + '); ValidLine(' + idproduct + ');" onfocus="CalcSubtotal(' + idproduct + '); ValidLine(' + idproduct + ');" style="text-align: center; width: 100%; font-weight: bold" /></td>');
                $('#itemquantity' + idproduct).val($('#linequantity').val());

                $('#inserttd' + idproduct).append('<td class="text-center"><input id="itemcost' + idproduct + '" name="productcost" type="number" min="1" class="panel-info text-center form-control fina onchange="CalcSubtotal(' + idproduct + '); ValidLine(' + idproduct + ');" oninput="CalcSubtotal(' + idproduct + '); ValidLine(' + idproduct + ');" onfocus="CalcSubtotal(' + idproduct + '); ValidLine(' + idproduct + ');" style="text-align: center; width: 100%; font-weight: bold" /></td>');
                $('#itemcost' + idproduct).val($('#linecost').val());

                $('#inserttd' + idproduct).append('<td class="text-center"><input id="itemsubtotal'+idproduct+'" name="productsubtotal" type="text" class="panel-info text-center form-control fina" style="text-align: center; font-weight: bold" readonly="readonly" /></td>');
                document.getElementById("itemsubtotal" + idproduct).value = $('#linetotal').val();

                $('#inserttd' + idproduct).append('<td class="text-center"><button id="elim' + idproduct + '" class="btn btn-danger btn-xs" onclick="deleteProduct(' + idproduct + ')"><span class="glyphicon glyphicon-remove"></span></button></td>');

                $('#linedescription').val(0);
                $('#linequantity').val('1');
                $('#linecost').val('');
                $('#linetotal').val('0.00');
            }

            calcgral();

        });

        //FUNCIÓN PARA VALIDAR SI EL PRODUCTO INGRESADO YA EXISTE EN LA LISTA DE PRODUCTOS

        function prodexist(id) {
            var products = [];

            $('input[name="productid"]').map(function () { products.push(this.value) });

            for (var i = 0; i < products.length; i++) {
                if (products[i] == id) {
                    return false;
                }
            }

            return true;
        }

        //BOTÓN PARA ELIMINAR UN PRODUCTO DE LA LISTA DE PRODUCTOS

        function deleteProduct(id) {
            $('#elim' + id).closest('tr').remove();
            calcgral();
        }

        //FUNCIÓN PARA CALCULAR EL TOTAL GENERAL DE VENTA

        function calcgral() {
            var subtotals = [];
            var total = 0;

            $('input[name="productsubtotal"]').map(function () { subtotals.push(parseFloat(this.value)) });

            for (var i = 0; i < subtotals.length; i++) {
                total += subtotals[i];
            }

            document.getElementById("totalgral").value = total.toFixed(2);
        }

        //FUNCIÓN PARA CÁLCULO AUTOMÁTICO DE LOS SUBTOTALES DE LA TABLA DE PRODUCTOS

        function CalcSubtotal(idproduct) {
            var subtotal = $('#itemquantity'+ idproduct).val() * $('#itemcost' + idproduct).val();

            document.getElementById('itemsubtotal' + idproduct).value = subtotal.toFixed(2);

            calcgral();
        }

        //VALIDACIONES DE LÍNEAS DE TABLA DE PRODUCTOS

        function ValidLine(idproduct) {

            if ($('#itemquantity' + idproduct).val() == 0) {
                $('#itemquantity' + idproduct).css("border-color","red");
                $('#spanquantitytable').text('Error, la cantidad comprada de un producto no puede ser cero');

            } else {
                $('#itemquantity' + idproduct).css("border-color","");
                $('#spanquantitytable').text('');
            }

            if ($('#itemcost' + idproduct).val() == 0) {
                $('#itemcost' + idproduct).css("border-color", "red");
                $('#spancosttable').text('Error, el costo no puede ser cero, se recomienda realizar un alta de Productos en masa');
            } else {
                $('#itemcost' + idproduct).css("border-color", "");
                $('#spancosttable').text('');
            }
        }

        $('#guardar').click(function() {
            if ($('#spanquantitytable').val() == '' & $('#spancosttable').val() == '') {
                var purchaseproducts = [];
                var productids = [];
                var productquantities = [];
                var productcosts = [];

                $('input[name="productid"]').map(function () { productids.push(parseFloat(this.value)) });
                $('input[name="productquantity"]').map(function () { productquantities.push(parseFloat(this.value)) });
                $('input[name="productcost"]').map(function () { productcosts.push(parseFloat(this.value)) });

                var product;
                for (var i = 0; i < productids.length; i++) {
                    product = {
                        IdProduct: productids[i],
                        LineQuantity: productquantities[i],
                        LinePrice: productcosts[i],
                        LineTotal: (productquantities[i]*productcosts[i])
                    }

                    purchaseproducts.push(product);
                }

                var purchase = {
                    IdPurchase: @Model.Purchase.IdPurchase,
                    @*PurchaseDate: @Model.PurchaseDate,*@
                    IdProvider: $('#providerid').val(),
                    PurchaseLines: purchaseproducts,
                    Comments: $('#purchasecomments').val(),
                    PurchaseTotal: $('#totalgral').val()

                }

                bootbox.confirm({
                    title: "Actualización de Precios",
                    message: "¿Desea actualizar ahora mismo los precios de los productos adquiridos?",
                    buttons: {
                        confirm: {
                            label: "Actualizar",
                            className: "btn-success"
                        },
                        cancel: {
                            label: "Ahora NO",
                            className: "btn-primary"
                        }

                    },
                    callback: function (result) {
                        if (result) {

                            $.ajax({
                                url: '@Url.Action("EditPurchases","Purchases")',
                                type: "POST",
                                data: JSON.stringify(purchase),
                                dataType: "JSON",
                                contentType: "application/json",
                                success: function(d) {
                                    if (d.status) {

                                        var url = '@Url.Action("LastBought", "Products", new { id = Model.Purchase.IdPurchase})';
                                        window.location.href = url;

                                    }
                                }
                            });

                        } else {
                            $.ajax({
                                url: '@Url.Action("EditPurchases","Purchases")',
                                type: "POST",
                                data: JSON.stringify(purchase),
                                dataType: "JSON",
                                contentType: "application/json",
                                success: function(d) {
                                    if (d.status) {

                                        var url = '@Url.Action("Index", "Purchases", new { message = 2})';
                                        window.location.href = url;

                                    }
                                }
                            });
                        }
                    }
                });




            }
        });

    </script>
}