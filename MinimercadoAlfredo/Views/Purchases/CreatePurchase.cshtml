@using Newtonsoft.Json
@model MinimercadoAlfredo.Models.Product

@{
    ViewBag.Title = "Nueva Compra";
}
<head>


</head>
@*///////////////////////////*@

<input value="@ViewBag.msg" id="msg" style="display: none" />
<h2>Carga Compra</h2>
<div class="details">
    <legend>
        Datos Generales
    </legend>
    <table>
        <thead class="thead-inverse">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="row" style="background-color:#373a3c;border-radius:5px">
                            <div class="col-md-4" align="center">
                                <label style="color:white;padding-top:8px">Nº Compra</label>
                            </div>
                            <div class="col-md-4" align="center">
                                <label style="color:white;padding-top:8px">Proveedor</label>
                            </div>

                            <div class="col-md-4" align="center">
                                <label style="color:white;padding-top:8px">Fecha Compra</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </thead>
    </table>
</div>

<table>
    <div class="container-fluid">
        <div class="row" style="padding-top:10px">
            <div class="col-md-12">
                <div class="row">
                    <div class="col-sm-4 dataContainer" align="center">
                        <span>@ViewBag.npurchase</span>

                    </div>
                    <div class="col-lg-4" align="center">
                        <select class="js-example-basic-single inputForm" id="providername" style="font: small-caption; width: 180px; height: 25px; background-color: beige;">
                            <option value="0">Seleccionar Proveedor...</option>
                            @foreach (var item in ViewBag.Providers)
                            {
                                <option value="@item.IdProvider">@item.ProviderName</option>
                            }
                        </select>
                        @*<input type="text" class="panel-info" style="width: 60px;height:25px;" id="customername" placeholder="" />*@
                        <span class="error">Requerido</span>
                    </div>

                    <div class="col-lg-4" align="center">
                        <input type="date" class="panel-info form-control inputForm" id="purchasedate" placeholder="dd/mm/aaaa" />
                        <span class="error">Requerido</span>
                    </div>

                </div>
            </div>
        </div>
    </div>
</table>
<div class="details">
    <legend>
        Lineas Compra
    </legend>
    <table>
        <thead class="thead-inverse">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-lg-12">
                        <div class="row" style="background-color: #373a3c; border-radius: 5px">

                            <div class="col-lg-2" align="center">
                                <label style="color: white; padding-top: 8px">Producto</label>

                            </div>
                            <div class="col-lg-3" align="center">
                                <label style="color: white; padding-top: 8px">Precio</label>
                            </div>
                            <div class="col-lg-3" align="center">
                                <label style="color: white; padding-top: 8px">Cantidad</label>
                            </div>
                            <div class="col-lg-3" align="center">
                                <label style="color: white; padding-top: 8px">Total</label>
                            </div>
                            <div class="col-lg-1" align="center">
                                <label style="color: white; padding-top: 8px">Acción</label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </thead>
    </table>
</div>




<table>

    <div class="container-fluid">
        <div class="row" style="padding-top:10px">
            <div class="col-md-12">
                <div class="row">

                    <div class="col-lg-2" align="center">
                        @* <input type="text" class="panel-info" style="width: 130px;height:25px;" id="linedescription" />*@
                        @*<div id="ajaxBeginFormResult">*@
                        <select class="js-example-basic-single" id="linedescription" style="font: small-caption; width: 200px; height: 25px; background-color: beige; display: inline-block" onchange="javacript: var valor = this.options[selectedIndex].text; document.getElementById('shadow').value = valor;">
                            <option value="0">Seleccionar Producto...</option>
                            @foreach (var item in ViewBag.Products)
                            {
                                <option value="@item.IdProduct">@item.ProductNumber - @item.ProductDescription</option>
                            }
                        </select>
                        @*<a class="btn btn-warning btn-xs" data-toggle="modal" data-target="#myModal" style="padding-right: 6px; padding-left: 6px; padding-top: 4px; padding-bottom: 4px">
                                <span class="glyphicon glyphicon-plus text-center"></span>
                            </a>*@
                        @*</div>*@
                        <input type="hidden" id="shadow" value="">
                        <span class="error">Requerido</span>
                    </div>

                    <div class="col-lg-3" align="center">
                        <input type="text" class="panel-info form-control inputForm" value="0" style="width: 130px; height: 25px;" id="lineprice" onchange="totallinea()" oninput="totallinea()" onkeypress="solonumerosptocoma()" />
                        <span class="error">Requerido</span>
                    </div>
                    <div class="col-lg-3" align="center">
                        <input type="number" class="panel-info form-control inputForm" value="1" style="width: 130px; height: 25px;" id="linequantity" onchange="totallinea()" oninput="totallinea()" onkeypress="solonumerosptocoma()" />
                        <span class="error">Requerido</span>
                    </div>
                    <div class="col-lg-3" align="center">
                        <input type="text" class="panel-info text-center totalView dataContainer" value="0.00" id="linetotal" readonly="readonly" />
                        <span class="error">Requerido</span>
                    </div>
                    <div class="col-lg-1" align="center">
                        <button type="button" id="add" class="btn btn-success btn-sm " value="Agregar" style="bottom:auto" />Agregar
                        <span class="glyphicon glyphicon-plus"></span>
                    </div>
                </div>
            </div>
        </div>
    </div>

</table>

<table class="tablecontainer" style="border:none; background-color:dimgrey; ">
    <div id="orderItems" class="tablecontainer" style="border:none ; padding-top:15px">
    </div>
</table>



<div class="details">
    <legend>
        Datos Generales
    </legend>
    <table>
        <thead class="thead-inverse">
            <div class="container-fluid">
                <div class="row">
                    <div class="col-md-12">
                        <div class="row" style="background-color:#373a3c;border-radius:5px">
                            <div class="col-md-6" align="left">
                                <label style="color:white;padding-top:8px">Comentarios</label>
                            </div>
                            <div class="col-md-6" align="center">
                                <label style="color:white;padding-top:8px">Total Compra</label>
                            </div>

                        </div>
                    </div>
                </div>
            </div>
        </thead>
    </table>
</div>

<table>
    <div class="container-fluid">
        <div class="row" style="padding-top:10px">
            <div class="col-lg-12">
                <div class="row">
                    <div class="col-lg-6" align="left">
                        <textarea type="text" style="width: 300px;" class="panel-info form-control" id="comments" placeholder=""></textarea>

                    </div>
                    <div class="col-lg-6" align="center">
                        <input readonly="readonly" type="text" value="0.00" class="panel-info text-center totalView dataContainer" id="purchasetotal" placeholder="" />
                        <span class="error">Requerido</span>
                    </div>

                </div>
            </div>
        </div>
    </div>
</table>


<hr />

<div class="text-right">
    <button type="button" id="submit" class="btn btn-success btn-lg btn-block " value="Guardar venta" />Guardar
    <span class="glyphicon glyphicon-floppy-disk"></span></button>
</div>



@*<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Agregar producto</h4>
                </div>
                <div class="modal-body">
                    @using (Ajax.BeginForm("CreateModal", "Products", new AjaxOptions
                    {
                        InsertionMode = InsertionMode.Replace,
                        UpdateTargetId = "ajaxBeginFormResult",
                        OnSuccess = "OnSuccess"
                    }))
                    {
                        @Html.AntiForgeryToken()

                        <div class="form-horizontal">

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                @Html.LabelFor(model => model.idCategory, "Rubro", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.DropDownList("idCategory", null, "Seleccione un Rubro", htmlAttributes: new { @class = "form-control input-sm" })
                                    @Html.ValidationMessageFor(model => model.idCategory, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductDescription, "Descripción", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProductDescription, new { htmlAttributes = new { @class = "form-control input-sm", @onchange = "ProdExistente()",@required="required" } })
                                    <span id="productoexistente" class="text-danger"></span>
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.ProductNumber, new { htmlAttributes = new { @class = "form-control input-sm", @onchange = "NroExistente()", @required = "required", @type="number" } })
                                    @Html.ValidationMessageFor(model => model.ProductNumber, "", new { @class = "text-danger" })
                                    <span id="nroexistente" class="text-danger"></span>

                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Cost, "Costo", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control input-sm", @required = "required", @type = "number" } })
                                    @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.WholeSalePrice, "Precio Mayorista", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.WholeSalePrice, new { htmlAttributes = new { @class = "form-control input-sm", @required = "required", @type = "number" } })
                                    @Html.ValidationMessageFor(model => model.WholeSalePrice, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.PublicPrice, "Precio Minorista", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.PublicPrice, new { htmlAttributes = new { @class = "form-control input-sm", @required = "required", @type = "number" } })
                                    @Html.ValidationMessageFor(model => model.PublicPrice, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.UploadDate, "Fecha de Carga", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.UploadDate, new { htmlAttributes = new { @class = "form-control input-sm", @required = "required" } })
                                    @Html.ValidationMessageFor(model => model.UploadDate, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control input-sm", @required = "required", @type = "number" } })
                                    @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Minimum, "Stock Mínimo", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Minimum, new { htmlAttributes = new { @class = "form-control input-sm", @required = "required", @type = "number" } })
                                    @Html.ValidationMessageFor(model => model.Minimum, "El Sistema le avisará cuando el Stock de este Producto sea menor a este valor", new { @class = "text" })
                                </div>
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.ProductState, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="radio col-md-4">
                                    <label>
                                        <input name="ProductState" id="optionsRadios1" value="true" checked="" type="radio">
                                        Activo
                                    </label>
                                    <label>    </label>
                                    <label>
                                        <input name="ProductState" id="optionsRadios2" value="false" type="radio">
                                        Desactivado
                                    </label>
                                </div>
                                <div class="col-md-2"></div>

                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Image, "Imagen", htmlAttributes: new { @class = "control-label col-md-2" })
                                <div class="col-md-10">
                                    @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                    @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
                                </div>
                            </div>


                            <div class="form-group">
                                <div class="col-md-offset-2 col-md-10">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                                    <input type="submit"  id="botonGuardar" value="Guardar" class="btn btn-success">

                                </div>
                            </div>
                        </div>
                    }

                </div>

            </div>
        </div>
    </div>*@


<link href="@Url.Content("~/Content/Select2/select2.min.css")" rel="stylesheet" />
@section Scripts{
    <script src="@Url.Content("~/Scripts/solonumeros.js")"></script>
    <script src="@Url.Content("~/Scripts/solonumerosptocoma.js")"></script>



    <script src="@Url.Content("~/Content/Select2/select2.js")"></script>
    <script>
        function totallinea() {
            var price = parseFloat($('#lineprice').val());
            var quantity = parseFloat($('#linequantity').val());
            var total = (price * quantity);
            document.getElementById("linetotal").value = total.toFixed(2);
        }

        function NroExistente() {

            if ($('#ProductNumber').val() != "") {

                var options = {};
                options.url = '@Url.Action("ExisteNro", "Products")';
                options.type = "GET";
                options.data = { "nombre": $("#ProductNumber").val() };
                options.dataType = "json";
                options.success = function (data) {
                    if (data) {
                        $('#nroexistente').text("Número de articulo existente");
                        $("#botonGuardar").prop("disabled", true);
                    } else {
                        $('#nroexistente').text("");
                        $("#botonGuardar").prop("disabled", false);

                    };


                };
                $.ajax(options);

            }

        }

        function ProdExistente() {

            if ($('#ProductDescription').val() != "") {

                var options = {};
                options.url = '@Url.Action("ExisteProd", "Products")';
                options.type = "GET";
                options.data = { "nombre": $("#ProductDescription").val() };
                options.dataType = "json";
                options.success = function (data) {
                    if (data) {
                        $('#productoexistente').text("Producto existente");
                        $("#botonGuardar").prop("disabled", true);
                    } else {
                        $('#productoexistente').text("");
                        $("#botonGuardar").prop("disabled", false);

                    };


                };
                $.ajax(options);

            }

        }





        function OnSuccess() {
            $("#myModal .close").click();
            $('.modal-backdrop').remove();

            //alert("Operacion completada");
            //bootbox.alert("Operación correcta.", function () {
            //    $('.modal-backdrop').remove();
            //});
        }
        /////////////////Start:Select searchable////////////////
        $(document).ready(function () {
            if ($('#msg').val() == 1) { toastr.success("Compra guardada correctamente."); }
            $(".js-example-basic-single").select2();
        });
        ////////////////End:Select searchable///////////////////

        /////////////Start:Autocomplete Sale Address CuitCuil/////
        //$(document).ready(function() {
        //    $("#customername").change(function() {

        //        var options = {};
        //        options.url = "/Sales/Getcustomerdata";
        //        options.type = "GET";
        //        options.data = { "cus": $("#customername").val() };
        //        options.dataType = "json";
        //        options.success = function(data) {
        //            document.getElementById("saleaddress").value = data.CustomerAddress;
        //            document.getElementById("cuitcuil").value = data.CuitCuil;
        //        };
        //        $.ajax(options);
        //    });
        //});
        //////////////End:Autocomplete Sale Address CuitCuil/////////////

        //////////////////////Start: Autocomplete Product Price/////////////
        $(document).ready(function() {
            $("#linedescription").change(function() {

                var options = {};
                options.url = "/Purchases/Getproductdata";
                options.type = "GET";
                options.data = { "pro": $("#linedescription").val() };
                options.dataType = "json";
                options.success = function(data) {
                    document.getElementById("lineprice").value = data;
                    totallinea();
                };
                $.ajax(options);

            });
        });
        ///////////////////End: Autocomplete Product Price////////

        //////////////////Start: LinePrice Calculation//////////////
        $(document).ready(function() {
            $("#linequantity").change(function() {
                    var price = parseFloat($('#lineprice').val());
                    var quantity = parseFloat($('#linequantity').val());

                    var total = price * quantity;

                    document.getElementById("linetotal").value = total;


                }
            );
        });


        $('#linetotal').click(function () {
            var price = parseFloat($('#lineprice').val());
            var quantity = parseFloat($('#linequantity').val());
            var total = price * quantity;
            document.getElementById("linetotal").value = total;
        });

        ////////////////////End: LinePrice Calculation/////////////

        ////Date Picker
        //$(document).ready(function() {
        //    $(function() {
        //        $('#saledata').datepicker({
        //            dateFormat: 'mm-dd-yy'
        //        });
        //    });
        //});

        $(document).ready(function() {
            var orderItems = [];
            var verifproductos = [];
            var totgral = [];
            //Add button click function
            $('#add').click(function() {
                //Check validation of order item
                var isValidItem = true;
                if ($('#linedescription').val().trim() == '' || $('#linedescription').val().trim() == '0') {
                    isValidItem = false;
                    $('#linedescription').siblings('span.error').css('visibility', 'visible');
                } else {
                    $('#linedescription').siblings('span.error').css('visibility', 'hidden');
                }

                if ($('#lineprice').val().trim() == '') {
                    isValidItem = false;
                    $('#lineprice').siblings('span.error').css('visibility', 'visible');
                } else {
                    $('#lineprice').siblings('span.error').css('visibility', 'hidden');
                }


                if ($('#linequantity').val().trim() == '') {
                    isValidItem = false;
                    $('#linequantity').siblings('span.error').text('Requerido');
                    $('#linequantity').siblings('span.error').css('visibility', 'visible');
                } else {
                    if ($('#linequantity').val().trim() * 1 == 0) {
                        isValidItem = false;
                        $('#linequantity').siblings('span.error').text('Valor min: 1');

                        $('#linequantity').siblings('span.error').css('visibility', 'visible');
                    } else {
                        $('#linequantity').siblings('span.error').css('visibility', 'hidden');
                    }
                }
                if ($('#linetotal').val().trim() == '') {
                    isValidItem = false;
                    $('#linetotal').siblings('span.error').css('visibility', 'visible');
                } else {
                    $('#linetotal').siblings('span.error').css('visibility', 'hidden');
                }
                if (isValidItem) {
                    ////////////***********//////////
                    var historial = verifproductos;
                    var errorproductos = false;
                    productoact = parseInt($('#linedescription').val().trim());
                    $.each(historial, function () {
                        if (productoact == parseInt(this)) {
                            errorproductos = true;

                        }
                    });
                }
                if (errorproductos) {
                    isValidItem = false;
                    bootbox.alert({
                        title: "Producto existente",
                        message: "El producto: - " + $('#shadow').val().trim() + " - ya se encuentra en el listado. ",
                        backdrop: true
                    });
                }
                //Add item to list if valid
                if (isValidItem) {
                    orderItems.push({
                        IdProduct: $('#linedescription').val().trim(),
                        LinePrice: $('#lineprice').val().trim(),
                        LineQuantity: $('#linequantity').val().trim(),
                        LineTotal: $('#linetotal').val().trim(),
                        LineDescription: $('#shadow').val().trim()
                    });
                    verifproductos.push(
                              parseInt($('#linedescription').val().trim())
                          );
                    totgral.push(
                             parseFloat($('#linetotal').val().trim())
                         );
                    //Clear fields
                    //$('#linedescription').val('').focus();
                    //$(document).find('#linedescription').select2();
                    $("#linedescription").val(0).trigger('change');
                    $('#lineprice,#linequantity,#linetotal').val('0.00');
                    $('#linequantity').val('1');


                }
                //populate order items
                GeneratedItemsTable();

            });
            //Save button click function
            $('#submit').click(function() {
                //validation of order
                var isAllValid = true;
                if (orderItems.length == 0) {
                    $('#orderItems').html('<span style="color:red;">Por favor, agregue productos.</span>');
                    isAllValid = false;
                }
                if ($('#providername').val().trim() == '' || $('#providername').val().trim() == '0') {
                    $('#providername').siblings('span.error').css('visibility', 'visible');
                    isAllValid = false;
                } else {
                    $('#providername').siblings('span.error').css('visibility', 'hidden');
                }
                //if ($('#idsale').val().trim() == '') {
                //    $('#idsale').siblings('span.error').css('visibility', 'visible');
                //    isAllValid = false;
                //} else {
                //    $('#idsale').siblings('span.error').css('visibility', 'hidden');
                //}



                if ($('#purchasetotal').val().trim() == '') {
                    $('#purchasetotal').siblings('span.error').css('visibility', 'visible');
                    isAllValid = false;
                } else {
                    $('#purchasetotal').siblings('span.error').css('visibility', 'hidden');
                }
                if ($('#purchasedate').val().trim() == '') {
                    $('#purchasedate').siblings('span.error').css('visibility', 'visible');
                    isAllValid = false;
                } else {
                    $('#purchasedate').siblings('span.error').css('visibility', 'hidden');
                }

                //Save if valid
                if (isAllValid) {
                    var data = {
                        ProviderName: $('#providername').val().trim(),
                        //Sorry forgot to add Description Field
                        PurchaseDate: $('#purchasedate').val().trim(),
                        PurchaseTotal: $('#purchasetotal').val().trim(),
                        Comments: $('#comments').val().trim(),
                        PurchaseLines: orderItems
                    }

                    $(this).val('Please wait...');

                    $.ajax({
                        url: '@Url.Action("CreatePurchase", "Purchases")',
                        type: "POST",
                        data: JSON.stringify(data),
                        dataType: "JSON",
                        contentType: "application/json",
                        success: function(d) {
                            //check is successfully save to database
                            if (d.status == true) {
                                var url = '@Url.Action("CreatePurchase", "Purchases", new { x = 1 })';
                                window.location.href = url;
                            } else {
                                alert('Failed');
                            }
                            $('#submit').val('Save');
                        },
                        error: function() {
                            alert('Error. Please try again.');
                            $('#submit').val('Save');
                        }
                    });
                }

            });

//function for show added items in table
            function GeneratedItemsTable() {
                if (orderItems.length > 0) {
                    var $table = $('<table style="border:none"></table>');
                    //$table.append('<thead><tr><th>Item</th><th>Quantity</th><th>Rate</th><th>Total</th></tr></thead>');
                    var $tbody = $('<tbody/>');
                    $.each(orderItems, function(i, val) {
                        var $row = $('<div class="col-md-12" align="center" ></div>');
                        $row.append($('<div class="col-md-2" style="font-weight: bold; border-style: outset;border-color:#CEECF5;border-width:2px;background-color:#F2F3A6;border-radius: 4px;"  ></div>').html(val.LineDescription));
                        $row.append($('<div class="col-md-3" style="font-weight: bold; border-style: outset;border-color:#CEECF5;border-width:2px;background-color:#F2F3A6;border-radius: 4px;"  ></div>').html(val.LinePrice));
                        $row.append($('<div class="col-md-3" style="font-weight: bold; border-style: outset;border-color:#CEECF5;border-width:2px;background-color:#F2F3A6;border-radius: 4px;"  ></div>').html(val.LineQuantity));
                        $row.append($('<div class="col-md-3" style="font-weight: bold; border-style: outset;border-color:#CEECF5;border-width:2px;background-color:#F2F3A6;border-radius: 4px;"  ></div>').html(val.LineTotal));
                        var $remove = $('<a href="#">Eliminar</a>');

                        //CALCULO TOTAL GRAL
                        purchasetotal = 0;
                        $.each(totgral, function () { purchasetotal += parseFloat(this) || 0; });
                        document.getElementById("purchasetotal").value = purchasetotal.toFixed(2);

                        $remove.click(function(e) {
                            e.preventDefault();
                            verifproductos.splice(i, 1);
                            totgral.splice(i, 1);
                            orderItems.splice(i, 1);
                            GeneratedItemsTable();
                            purchasetotal = 0;
                            $.each(totgral, function () { purchasetotal += parseFloat(this) || 0; });
                            document.getElementById("purchasetotal").value = purchasetotal.toFixed(2);
                        });
                        $row.append($('<div class="col-md-1" style="font-weight: bold;border-style: outset;border-color:#CEECF5;border-width:2px;background-color:#F2F3A6;border-radius: 4px;"></div>').html($remove));
                        $tbody.append($row);
                    });

                    $table.append($tbody);
                    $('#orderItems').html($table);
                } else {
                    $('#orderItems').html('');
                }
            }
        });

    </script>
}

<style>
    /*Adding some css for looks good*/
    span.error {
        display: block;
        visibility: hidden;
        color: red;
        font-size: 90%;
    }


    /*css for table*/
    .container td {
        vertical-align: top;
    }

    .tablecontainer table {
        width: 100%;
        border-collapse: collapse;
        border-top: 1px solid #BFAEAE;
        border-right: 1px solid #BFAEAE;
    }

    .tablecontainer th {
        border-bottom: 2px solid #BFAEAE !important;
    }

    .tablecontainer th, .tablecontainer td {
        text-align: left;
        border-left: 1px solid #BFAEAE;
        padding: 5px;
        border-bottom: 1px solid #BFAEAE;
    }

    .ui-widget {
        font-size: 12px !important;
    }
</style>