@model MinimercadoAlfredo.Models.Provider

@{
    ViewBag.Title = "Create";
}

<h2 class="text-center">Agregar Proveedor</h2>
<hr style="color:grey;border-color:grey" />
<br />


@using (Html.BeginForm("Create", "Providers", null, FormMethod.Post, new { id = "createProvider" })) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ProviderName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProviderName, new { htmlAttributes = new { @class = "form-control", @onchange= "ValidProvider()" } })
                @*@Html.ValidationMessageFor(model => model.ProviderName, "", new { @class = "text-danger" })*@
                <span id="spanprovider" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProviderAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProviderAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProviderAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProviderPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProviderPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProviderPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProviderEmail, "Email", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProviderEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProviderEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" id="botonGuardar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    <a href="@Url.Action("Index", "Providers")" class="btn btn-primary">Volver</a>
    @*@Html.ActionLink("Volver", "Index")*@
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
    var IsValidItem = true;
    function ValidProvider() {

        if ($('#ProviderName').val() != '') {

            var options = {};
            options.url = '@Url.Action("ExisteProveedor", "Providers")';
            options.type = "GET";
            options.data = { "nombre": $("#ProviderName").val() };
            options.dataType = "json";
            options.success = function (data) {
                if (data) {
                    $('#spanprovider').text('Proveedor existente');
                    $("#botonGuardar").prop("disabled", true);
                    IsValidItem = false;
                } else {
                    $('#spanprovider').text('');
                    $("#botonGuardar").prop("disabled", false);
                }
            }
            $.ajax(options);
        } else {
            $('#spanprovider').text('Campo Obligatorio');
            IsValidItem = false;
        }
    }

    $('#createProvider').submit(function (e) {
        var x = this;
        e.preventDefault();
        if ($('#ProviderName').val() != '') {
            if (IsValidItem) {
                bootbox.confirm("** Está por agregar un nuevo Proveedor, ¿Desea continuar?", function (result) {
                    if (result) {
                        x.submit();
                    }
                });
            }
        } else {
            $('#spanprovider').text('Campo Obligatorio');
        }
    })
</script>
}
