@model MinimercadoAlfredo.Models.Provider

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Provider</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ProviderName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProviderName, new { htmlAttributes = new { @class = "form-control", @onchange= "ProvExistente()" } })
                @Html.ValidationMessageFor(model => model.ProviderName, "", new { @class = "text-danger" })
                <span id="proveedorexistente" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProviderAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProviderAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProviderAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProviderPhone, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProviderPhone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProviderPhone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProviderEmail, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProviderEmail, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProviderEmail, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" id="botonGuardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Volver", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
    function ProvExistente() {
            
            if ($('#ProviderName').val() != "") {
                
                    var options = {};
                    options.url = '@Url.Action("ExisteProv", "Providers")';
                    options.type = "GET";
                    options.data = {"nombre": $("#ProviderName").val()};
                    options.dataType = "json";
                    options.success = function(data) {
                    if (data) {
                        $('#proveedorexistente').text("Proveedor existente");
                    $("#botonGuardar").prop("disabled", true);
                    } else {
                        $('#proveedorexistente').text("");
                        $("#botonGuardar").prop("disabled", false);

                    };


                    };
                    $.ajax(options);

                    }

    }


    
</script>
}
