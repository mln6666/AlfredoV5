@model MinimercadoAlfredo.Models.Product

@{
    Layout = null;
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdProduct)

        <div class="form-group">
            <div class="col-md-2"></div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.idCategory, "Rubro", htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-5">
                @Html.DropDownList("idCategory", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idCategory, "", new { @class = "text-danger" })
            </div>
        </div>        

        <div class="form-group">
            <div class="col-md-2"></div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.ProductDescription, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-5">
                @Html.EditorFor(model => model.ProductDescription, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2"></div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.ProductNumber, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-5">
                @Html.EditorFor(model => model.ProductNumber, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ProductNumber, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2"></div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Cost, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-5">
                @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2"></div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.WholeSalePrice, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-5">
                @Html.EditorFor(model => model.WholeSalePrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.WholeSalePrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2"></div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.PublicPrice, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-5">
                @Html.EditorFor(model => model.PublicPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PublicPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2"></div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.UploadDate, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-5">
                @Html.EditorFor(model => model.UploadDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UploadDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2"></div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-5">
                @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2"></div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Minimum, htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-5">
                @Html.EditorFor(model => model.Minimum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Minimum, "", new { @class = "text-danger" })
            </div>
        </div>

        @if (Model.ProductState == true)
        {
            <div class="form-group">
                <div class="col-md-2"></div>

                <div class="col-md-4">
                    @Html.LabelFor(model => model.ProductState, "Estado", htmlAttributes: new { @class = "control-label", @Style = "text-align: left" })
                </div>
                <div class="radio col-md-5">
                    <label>
                        <input name="ProductState" id="optionsRadios1" value="true" checked="" type="radio">
                        Activo
                    </label>
                    <label>  </label>
                    <label>
                        <input name="ProductState" id="optionsRadios2" value="false" type="radio">
                        Desactivado
                    </label>
                </div>
                <div class="col-md-2"></div>

            </div>
        }
        else
        {
            <div class="form-group">
                <div class="col-md-2"></div>

                <div class="col-md-4">
                    @Html.LabelFor(model => model.ProductState, htmlAttributes: new { @class = "control-label", @Style = "text-align: left" })
                </div>
                <div class="radio col-md-5">
                    <label>
                        <input name="ProductState" id="optionsRadios1" value="true" type="radio">
                        Activo
                    </label>
                    <label>  </label>
                    <label>
                        <input name="ProductState" id="optionsRadios2" value="false" checked="" type="radio">
                        Desactivado
                    </label>
                </div>
                <div class="col-md-2"></div>

            </div>
        }

        <div class="form-group">
            <div class="col-md-2"></div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Image, "Imagen", htmlAttributes: new { @class = "control-label" })
            </div>
            <div class="col-md-5">
                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>        

        <div class="form-group">
            <div class="form-actions no-color text-center">
                <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                <input type="submit" value="Guardar cambios" class="btn btn-success" />
            </div>
        </div>
    </div>
}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
