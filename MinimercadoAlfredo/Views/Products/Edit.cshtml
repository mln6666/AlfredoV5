@model MinimercadoAlfredo.Models.Product

@{
    ViewBag.Title = "Editar";
}

<h2 class="text-center">Editar Producto</h2>
<hr style="color:grey;border-color:grey" />
<br />


@using (Html.BeginForm("Edit", "Products", null, FormMethod.Post, new { id = "editProd" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.IdProduct)
        <div class="form-group">
            @Html.LabelFor(model => model.idCategory, "Rubro", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("idCategory", null, "Seleccione un Rubro", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.idCategory, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductDescription, "Descripción", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductDescription, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.ProductDescription, "", new { @class = "text-danger" })*@
                <span id="spandescexistente" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductNumber, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ProductNumber, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.ProductNumber, "", new { @class = "text-danger" })*@
                <span id="spanprodexistente" class="text-danger"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cost, "Costo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control", @onchange = "ValidCost()", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                <span id="spanvalidcost" class="text-danger text-center"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WholeSalePrice, "Precio Mayorista", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WholeSalePrice, new { htmlAttributes = new { @class = "form-control", @onchange = "ValidCost()" } })
                <span id="spanwholesaleprice" class="text-danger"></span>
                <span id="spanvalidcost2" class="text-danger text-center"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublicPrice, "Precio Minorista", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PublicPrice, new { htmlAttributes = new { @class = "form-control", @onchange = "ValidCost()" } })
                <span id="spanpublicprice" class="text-danger"></span>
                <span id="spanvalidcost3" class="text-danger text-center"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UploadDate, "Fecha de Carga", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UploadDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UploadDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Minimum, "Stock Mínimo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Minimum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Minimum, "El Sistema le avisará cuando el Stock de este Producto sea menor a este valor", new { @class = "text" })
            </div>
        </div>

        @if (Model.ProductState == true)
        {
            <div class="form-group">
                @Html.LabelFor(model => model.ProductState, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="radio col-md-4">
                    <label>
                        <input name="ProductState" id="optionsRadios1" value="true" checked="" type="radio">
                        Activo
                    </label>
                    <label>    </label>
                    <label>
                        <input name="ProductState" id="optionsRadios2" value="false" type="radio">
                        Desactivado
                    </label>
                </div>
                <div class="col-md-2"></div>

            </div>
        }
        else
        {
            <div class="form-group">
                @Html.LabelFor(model => model.ProductState, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="radio col-md-4">
                    <label>
                        <input name="ProductState" id="optionsRadios1" value="true" type="radio">
                        Activo
                    </label>
                    <label>    </label>
                    <label>
                        <input name="ProductState" id="optionsRadios2" value="false" checked="" type="radio">
                        Desactivado
                    </label>
                </div>
                <div class="col-md-2"></div>

            </div>
        }

        <div class="form-group">
            @Html.LabelFor(model => model.Image, "Imagen", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" id="botonGuardar" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<div>
    <a href="@Url.Action("Index", "Products")" class="btn btn-primary">Volver</a>
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var validcost = false;        

        function ValidCost() {

            var cost = parseInt($('#Cost').val());
            var wholeSalePrice = parseInt($('#WholeSalePrice').val());
            var publicPrice = parseInt($('#PublicPrice').val());

            if ($('#Cost').val() != '' & $('#WholeSalePrice').val() != '') {
                if (cost > wholeSalePrice) {
                    $('#spanvalidcost').text('El costo de un producto no puede superar al precio mayorista');
                    validcost = true;
                } else {
                    $('#spanvalidcost').text('');
                    validcost = false;
                }
            }

            if ($('#PublicPrice').val() != '' & $('#WholeSalePrice').val() != '') {
                if (publicPrice < wholeSalePrice) {
                    $('#spanvalidcost2').text('El precio mayorista no puede ser menor al precio minorista');
                    validcost = true;
                } else {
                    $('#spanvalidcost2').text('');
                    validcost = false;
                }
            }

            if ($('#PublicPrice').val() != '' & $('#Cost').val() != '') {
                if (publicPrice < cost) {
                    $('#spanvalidcost3').text('El precio minorista no puede ser menor al costo del producto');
                    validcost = true;
                } else {
                    $('#spanvalidcost3').text('');
                    validcost = false;
                }
            }
        }



        $('#editProd').submit(function (e) {
            var x = this;
            e.preventDefault();
            var isValidItem = true;
            if ($('#Cost').val() == '' | validcost) {
                isValidItem = false;
            }

            if ($('#ProductDescription').val() == '') {
                $('#spandescexistente').text('Campo Obligatorio');
                isValidItem = false;
            }

            if ($('#ProductNumber').val() == '') {
                $('#spanprodexistente').text('Campo Obligatorio');
                isValidItem = false;
            }

            if (isValidItem) {
                bootbox.confirm("** Está por agregar un nuevo producto, ¿Desea continuar?", function (result) {
                    if (result) {
                        x.submit();
                    }
                });
            }
        })

    </script>
}