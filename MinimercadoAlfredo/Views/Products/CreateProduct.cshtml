@model MinimercadoAlfredo.Models.Product
@{
    ViewBag.Title = "CreateProduct";
}

@if (TempData["message"] != null)
{
    <input id="message" style="display: none" value="@TempData["message"]" />
}

<h2 class="text-center">Nuevo Producto</h2>
<hr style="color: grey; border-color: grey"/>

<div class="form-horizontal">

    <div class="form-group">
        @Html.LabelFor(model => model.idCategory, "Rubro", htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            <select class="js-example-basic-single" id="IdCategory" onchange="category()" style="font: small-caption; width: 280px; height: 38px; background-color: beige;">
                <option value="">Seleccione un Rubro...</option>
                @foreach (var item in ViewBag.Categories)
                {
                    <option value="@item.IdCategory">@item.CategoryName</option>
                }
            </select>
            <span id="spancategory" style="color: red"></span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IdTrademark, "Marca", htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            <div>
                <select class="js-example-basic-single" id="IdTrademark" name="IdTrademark" onchange="Marca()" style="font: small-caption; width: 280px; height: 38px; background-color: beige;">
                    <option value="0">Seleccione una Marca...</option>
                    @foreach (var item in ViewBag.Trademarks)
                    {
                        <option value="@item.IdTrademark">@item.TrademarkName</option>
                    }
                </select>
                <button id="addtrademark" class="btn btn-success btn-xs" title="Agregar marca"><span class="glyphicon glyphicon-plus text-center"></span></button>
                
                <span id="spantrademark" style="color:red"></span>
            </div>
            
        </div>
    </div>

    <div id="showtrademark" class="form-group" style="display: none">
        <div class="col-md-2"></div>
        <div class="col-md-10">
            <input type="text" id="newtrademark" placeholder="Ingrese nueva marca" style="width: 280px" onchange="inputtrademark()" oninput="inputtrademark()"/>
            <button id="addconfirmation" class="btn btn-success btn-xs" title="Agregar"><span class="glyphicon glyphicon-ok text-center"></span></button>
            <button id="hiddentrademark" class="btn btn-danger btn-xs" title="Cancelar"><span class="glyphicon glyphicon-remove text-center"></span></button>
            <span id="spannewtrademark" style="color: red"></span>
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.ProductDescription, "Descripción", htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            <input type="text" id="ProductDescription" class="" placeholder="Ingrese la descripción del producto" style="width: 280px" onchange="DescExistente()" oninput="DescExistente()"/>
            <span id="spandescexistente" style="color:red"></span>
        </div>

    </div>




    <div class="form-group">
        @Html.LabelFor(model => model.Cost, "Costo", htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            <input type="number" id="ProductCost" maxlength="9" step="any" placeholder="Ingrese el costo del Producto" style="width: 280px" onchange="ValidCost()" oninput="ValidCost()"/>
            <span id="spanvalidcost" class="text-center" style="color:red"></span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WholeSalePrice, "Precio Mayorista", htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            <input type="number" id="ProductWholeSalePrice" maxlength="9" style="width: 280px" placeholder="Ingrese el precio mayorista del Producto" onchange="ValidCost()" oninput="ValidCost()"/>
            <span id="spanwholesaleprice" style="color:red"></span>
            <span id="spanvalidcost2" class="text-center" style="color:red"></span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.PublicPrice, "Precio Minorista", htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            <input type="number" id="ProductPublicPrice" maxlength="9" style="width: 280px" placeholder="Ingrese el precio minorista del Producto" onchange="ValidCost()" oninput="ValidCost()"/>
            <span id="spanpublicprice" style="color:red"></span>
            <span id="spanvalidcost3" class="text-center" style="color:red"></span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductState, "Estado", htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="radio col-md-4">
            <label>
                <input name="ProductState" id="optionsRadios1" checked type="radio">
                Activo
            </label>

            <label style="margin-left: 12%">
                <input name="ProductState" id="optionsRadios2" type="radio">
                Desactivado
            </label>
        </div>
        <div class="col-md-2"></div>

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Stock, htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            <input type="number" id="productStock" min="0" maxlength="4" style="width: 280px" placeholder="Ingrese Stock actual del producto" />
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Minimum, "Stock Mínimo", htmlAttributes: new {@class = "control-label col-md-2"})
        <div class="col-md-10">
            <input type="number" id="productMinimum" min="0" maxlength="4" style="width: 280px" placeholder="Ingrese Stock mínimo" />
            @Html.ValidationMessageFor(model => model.Minimum, "El Sistema le avisará cuando el Stock de este Producto sea menor a este valor", new {@class = "text"})
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <a href="@Url.Action("Index", "Products")" class="btn btn-primary"><span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span> Volver</a>

            <button type="button" value="Guardar" id="botonGuardar" class="btn btn-success">Guardar &nbsp;<span class="glyphicon glyphicon-floppy-disk"></span></button>
        </div>
    </div>
</div>
<link href="@Url.Content("~/Content/Select2/select2.min.css")" rel="stylesheet" />
@section scripts{
    <script src="@Url.Content("~/Content/Select2/select2.js")"></script>
    <script>
        $(document).ready(function() {
            if ($('#message').val() == 1)
                toastr.success("Producto agregado exitosamente");

            $(".js-example-basic-single").select2();
        });

        var validcost;
        var optionstate;
        var IsValidItem;
        var IsValidItem2;
        var IsValidItem3;

        function category() {
            $('#spancategory').text('');
            IsValidItem2 = true;
            if ($('#IdCategory').val() == '' | $('#IdCategory').val() == null) {
                $('#spancategory').text('Debe seleccionar un Rubro');
                IsValidItem2 = false;
            }
        }


        function DescExistente() {

            IsValidItem = true;

            if ($('#ProductDescription').val() != "") {
                $('#spandescexistente').text("");
                var options = {};
                options.url = '@Url.Action("ExisteProd", "Products")';
                options.type = "GET";
                options.data = { "nombre": $("#ProductDescription").val(), "Trademark": $("#IdTrademark").val() };
                options.dataType = "json";
                options.success = function(data) {
                    if (data) {
                        $('#spandescexistente').text("Producto existente");
                        IsValidItem = false;
                    }

                };
                $.ajax(options);

            } else {
                $('#spandescexistente').text("Debe ingresar la descripción del Producto");
                IsValidItem = false;
            }

        }

        function Marca() {
            IsValidItem3 = true;
            $('#spantrademark').text("");
            if ($('#IdTrademark').val() == 0) {
                $('#spantrademark').text("Debe seleccionar una Marca");
                IsValidItem3 = false;
            }
        }

        function ValidCost() {

            validcost = true;
            var cost = parseFloat($('#ProductCost').val());
            var wholeSalePrice = parseFloat($('#ProductWholeSalePrice').val());
            var publicPrice = parseFloat($('#ProductPublicPrice').val());

            $('#spanvalidcost').text('');
            $('#spanvalidcost2').text('');
            $('#spanvalidcost3').text('');

            if ($('#ProductCost').val() != '') {

                if ($('#ProductWholeSalePrice').val() != '') {
                    if (cost > wholeSalePrice) {
                        $('#spanvalidcost').text('El costo de un producto no puede superar al precio mayorista');
                        validcost = false;
                    }
                }

                if ($('#ProductPublicPrice').val() != '') {
                    if (publicPrice < cost) {
                        $('#spanvalidcost3').text('El precio minorista no puede ser menor al costo del producto');
                        validcost = false;
                    }
                }

            } else {
                $('#spanvalidcost').text('El costo de un producto es obligatorio');
                validcost = false;
            }

            if ($('#ProductPublicPrice').val() != '' & $('#ProductWholeSalePrice').val() != '') {
                if (publicPrice < wholeSalePrice) {
                    $('#spanvalidcost2').text('El precio mayorista no puede superar al precio minorista');
                    validcost = false;
                }
            }
        }

        //BOTONES PARA AGREGAR NUEVA MARCA

        $('#addtrademark').click(function() {
            $('#spantrademark').text('');
            $('#addtrademark').hide('slow');
            $('#showtrademark').toggle('slow');
        });

        $('#hiddentrademark').click(function() {
            $('#showtrademark').toggle('slow');
            $('#addtrademark').toggle('slow');
        });

        function inputtrademark() {
            if ($('#newtrademark').val() == '') {
                $('#spannewtrademark').text("Ingrese el nombre de la nueva Marca");
            } else {
                $('#spannewtrademark').text("");
            }
        }

        $('#addconfirmation').click(function() {
            
            if ($('#newtrademark').val() != "") {

                var options = {};
                options.url = '@Url.Action("ExisteMarca", "Trademarks")';
                options.type = "GET";
                options.data = { "trademark": $("#newtrademark").val() };
                options.dataType = "json";
                options.success = function(data) {
                    if (data) {
                        $('#spannewtrademark').text("La marca que está intentando ingresar ya existe");
                    } else {
                        var options2 = {};
                        options2.url = '@Url.Action("AddTrademark", "Trademarks")';
                        options2.type = "POST";
                        options2.data = { "newtrademark": $("#newtrademark").val() };
                        options2.dataType = "JSON";
                        options2.success = function(data2) {
                            if (!data2.exist) {
                                toastr.success("La Marca ha sido registrada exitosamente");

                                $('#showtrademark').toggle('slow');
                                $('#addtrademark').toggle('slow');
                            } else {
                                toastr.warning("Hubo un error al intentar guardar la nueva Marca, inténtelo nuevamente");
                            }
                            //$('#newtrademark').val('');
                        };
                        $.ajax(options2);

                        //AQUÍ VA LA FUNCIÓN PARA ACTUALIZAR LA LISTA DE MARCAS DEL SELECT2

                        var val = $('#newtrademark').val();

                        var options3 = {};
                        options3.url = '@Url.Action("GetIdTrademark", "Trademarks")';
                        options3.type = "POST";
                        options3.data = { "dato": val };
                        options3.dataType = "JSON";
                        options3.success = function (data3) {
                            if (data3 != null) {
                                $('#IdTrademark').append('<option value="' + data3 + '">' + val + '</option>');
                                $('#linedescription').val(data3).trigger('change');
                            }
                        };
                        $.ajax(options3);
                        
                        $('#newtrademark').val('');
                    }
                };
                $.ajax(options);
            } else {
                inputtrademark();
            }
        });

        //BOTÓN GUARDAR PRODUCTO

        $('#botonGuardar').click(function() {

            if (validcost & IsValidItem & IsValidItem2 & IsValidItem3) {

                bootbox.confirm({
                    title: "Confirmación",
                    message: "Usted está por agregar un nuevo producto",
                    buttons: {
                        confirm: {
                            label: 'Agregar',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: 'Cancelar',
                            className: 'btn-primary'
                        }
                    },
                    callback: function(result) {
                        if (result) {

                            if ($('#optionsRadios1').is(':checked')) {
                                optionstate = true;
                            } else {
                                optionstate = false;
                            }

                            var product = {
                                ProductDescription: $('#ProductDescription').val(),
                                ProductCategory: $('#IdCategory').val(),
                                ProductTrademark: $('#IdTrademark').val(),
                                ProductCost: parseFloat($('#ProductCost').val()),
                                ProductWholeSalePrice: parseFloat($('#ProductWholeSalePrice').val()),
                                ProductPublicPrice: parseFloat($('#ProductPublicPrice').val()),
                                ProductState: optionstate,
                                ProductStock: parseFloat($('#productStock').val()),
                                ProductMinimum: parseFloat($('#productMinimum').val())
                            }

                            $.ajax({
                                url: '@Url.Action("CreateProduct", "Products")',
                                type: "POST",
                                data: JSON.stringify(product),
                                dataType: "JSON",
                                contentType: "application/json",
                                success: function(d) {
                                    if (d.status) {
                                        
                                        var url = '@Url.Action("CreateProduct", "Products", new { message = 1})';
                                        window.location.href = url;
                                    }
                                }
                            });
                        }
                    }
                });


            }
        });

    </script>
}
