@model MinimercadoAlfredo.Models.Product

@{
    ViewBag.Title = "Nuevo Producto";
}

<h2 class="text-center">Agregar Producto</h2>
<hr style="color:grey;border-color:grey" />
<br />


@using (Html.BeginForm("Create", "Products", null, FormMethod.Post, new { id = "createProd" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.idCategory, "Rubro", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownList("idCategory", null, "Seleccione un Rubro", htmlAttributes: new {@class = "form-control"})
                @*@Html.ValidationMessageFor(model => model.idCategory, "", new { @class = "text-danger" })*@
                <span id="spancategory" class="text-danger"></span>
            </div>
        </div>
        @*<div class="form-group">
            @Html.LabelFor(model => model.IdTrademark, "Marca", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdTrademark", null, "Seleccione un Marca", htmlAttributes: new { @class = "form-control" })
                
                <span id="spantrademark" class="text-danger"></span>
            </div>
        </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.IdTrademark, "Marca", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div>
                    <select class="js-example-basic-single" id="IdTrademark" name="IdTrademark" onchange="Marca()" style="font: small-caption; width: 280px; height: 38px; background-color: beige;">
                        <option value="0">Seleccionar Marca...</option>
                        @foreach (var item in ViewBag.Trademarks)
                        {
                            <option value="@item.IdTrademark">@item.TrademarkName</option>
                        }
                    </select>
                    <button id="addtrademark" class="btn btn-success btn-xs"><span class="glyphicon glyphicon-plus text-center"></span></button>
                    <div id="showtrademark" style="display: none; margin-top: 1%">
                        <input type="text" id="newtrademark" placeholder="Ingrese nueva marca"/>
                        <button id="addconfirmation" class="btn btn-success btn-xs"><span class="glyphicon glyphicon-ok text-center"></span></button>
                        <button id="hiddentrademark" class="btn btn-danger btn-xs"><span class="glyphicon glyphicon-remove text-center"></span></button>
                    </div>
                    <span id="spannewtrademark" style="color:red"></span>
                </div>
                <span id="spantrademark" class="text-danger"></span>
            </div>
        </div>

      
        
            
            <div class="form-group">
                @Html.LabelFor(model => model.ProductDescription, "Descripción", htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProductDescription, new {htmlAttributes = new {@class = "form-control", @onchange = "DescExistente()"}})
                    @Html.ValidationMessageFor(model => model.ProductDescription, "", new {@class = "text-danger"})
                    <span id="spandescexistente" class="text-danger"></span>
                </div>
                
            </div>
            
       
     

        <div class="form-group">
            @Html.LabelFor(model => model.Cost, "Costo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cost, new { htmlAttributes = new { @class = "form-control", @onchange = "ValidCost()", @required = "required" } })
                @Html.ValidationMessageFor(model => model.Cost, "", new { @class = "text-danger" })
                <span id="spanvalidcost" class="text-danger text-center"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.WholeSalePrice, "Precio Mayorista", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.WholeSalePrice, new { htmlAttributes = new { @class = "form-control", @onchange = "ValidCost()" } })
                <span id="spanwholesaleprice" class="text-danger"></span>
                <span id="spanvalidcost2" class="text-danger text-center"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PublicPrice, "Precio Minorista", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PublicPrice, new { htmlAttributes = new { @class = "form-control", @onchange = "ValidCost()" } })
                <span id="spanpublicprice" class="text-danger"></span>
                <span id="spanvalidcost3" class="text-danger text-center"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ProductState, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="radio col-md-4">
                <label>
                    <input name="ProductState" id="optionsRadios1" value="true" checked="" type="radio">
                    Activo
                </label>
                
                <label style="margin-left: 12%">
                    <input name="ProductState" id="optionsRadios2" value="false" type="radio">
                    Desactivado
                </label>
            </div>
            <div class="col-md-2"></div>

        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control" } })
                @*@Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Minimum, "Stock Mínimo", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Minimum, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Minimum, "El Sistema le avisará cuando el Stock de este Producto sea menor a este valor", new { @class = "text" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <a href="@Url.Action("Index", "Products")" class="btn btn-primary"><span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span> Volver</a>

                <button type="submit" value="Guardar" id="botonGuardar" class="btn btn-success">Guardar &nbsp;<span class="glyphicon glyphicon-floppy-disk"></span></button>
            </div>
        </div>
    </div>
}

<div class="modal fade" id="myModal" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title text-center">Agregar Marca</h4>
            </div>
            <div class="modal-body">
                <div class="te">Espere...</div>
            </div>
        </div>
    </div>
</div>



<link href="@Url.Content("~/Content/Select2/select2.min.css")" rel="stylesheet" />
@section Scripts {
    <script src="@Url.Content("~/Content/Select2/select2.js")"></script>
    @Scripts.Render("~/bundles/jqueryval")
    <script>

        $(document).ready(function () {
            $(".js-example-basic-single").select2();
        });

        var validcost = true;
        var validcost2 = true;
        var validcost3 = true;
        var IsValidItem = true;
        var IsValidItem2 = true;

        function DescExistente() {

            if ($('#ProductDescription').val() != "") {

                var options = {};
                options.url = '@Url.Action("ExisteProd", "Products")';
                options.type = "GET";
                options.data = { "nombre": $("#ProductDescription").val(), "Trademark": $("#IdTrademark").val() };
                options.dataType = "json";
                options.success = function(data) {
                    if (data) {
                        $('#spandescexistente').text("Producto existente");
                        IsValidItem = false;
                    } else {
                        $('#spandescexistente').text("");
                        IsValidItem = true;
                    };

                };
                $.ajax(options);

            } else {
                IsValidItem = false;
            }

        }

        @*function ProdExistente() {

            if ($('#ProductNumber').val() != "") {

                var options = {};
                options.url = '@Url.Action("ExisteNro", "Products")';
                options.type = "GET";
                options.data = { "nombre": $("#ProductNumber").val() };
                options.dataType = "json";
                options.success = function (data) {
                    if (data) {
                        $('#spanprodexistente').text("Nro de Artículo existente");
                        IsValidItem2 = false;
                    } else {
                        $('#spanprodexistente').text("");
                        IsValidItem2 = true;
                    };


                };
                $.ajax(options);

            } else {
                IsValidItem2 = false;
            }

        }*@


        function Marca() {
            if ($('#trademarks').val() == 0) {
                $('#spantrademark').text("Debe seleccionar una Marca");
            } else {
                $('#spantrademark').text("");
            }
        }

        function ValidCost() {

            var cost = parseInt($('#Cost').val());
            var wholeSalePrice = parseInt($('#WholeSalePrice').val());
            var publicPrice = parseInt($('#PublicPrice').val());

            if ($('#Cost').val() != '' & $('#WholeSalePrice').val() != '') {
                if (cost > wholeSalePrice) {
                    $('#spanvalidcost').text('El costo de un producto no puede superar al precio mayorista');
                    validcost = false;
                } else {
                    $('#spanvalidcost').text('');
                    validcost = true;
                }
            }

            if ($('#PublicPrice').val() != '' & $('#WholeSalePrice').val() != '') {
                if (publicPrice < wholeSalePrice) {
                    $('#spanvalidcost2').text('El precio mayorista no puede superar al precio minorista');
                    validcost2 = false;
                } else {
                    $('#spanvalidcost2').text('');
                    validcost2 = true;
                }
            }

            if ($('#PublicPrice').val() != '' & $('#Cost').val() != '') {
                if (publicPrice < cost) {
                    $('#spanvalidcost3').text('El precio minorista no puede ser menor al costo del producto');
                    validcost3 = false;
                } else {
                    $('#spanvalidcost3').text('');
                    validcost3 = true;
                }
            }
        }

        //BOTONES PARA AGREGAR NUEVA MARCA

        $('#addtrademark').click(function () {
            $('#addtrademark').hide('slow');
            $('#showtrademark').toggle('slow');
        });

        $('#hiddentrademark').click(function() {
            $('#showtrademark').toggle('slow');
            $('#addtrademark').toggle('slow');
        });

        $('#addconfirmation').click(function() {
            if ($('#newtrademark').val() != "") {

                $('#spannewtrademark').text("");

                var options = {};
                options.url = '@Url.Action("ExistTrademark", "Trademarks")';
                options.type = "GET";
                options.data = { "trademark": $("#newtrademark").val() };
                options.dataType = "json";
                options.success = function(data) {
                    if (data) {
                        $('#spannewtrademark').text("La marca que está intentando ingresar ya existe");
                    } else {
                        var options2 = {};
                        options2.url = '@Url.Action("AddTrademark", "Trademarks")';
                        options2.type = "POST";
                        options2.data = { "newtrademark": $("#newtrademark").val() };
                        options2.dataType = "JSON";
                        options2.success = function(data2) {
                            if (!data2.exist) {
                                toastr.success("La Marca ha sido registrada exitosamente");
                            } else {
                                toastr.warning("Hubo un error al intentar guardar la nueva Marca, inténtelo nuevamente");
                            }
                            $('#newtrademark').val('');
                        };
                        $.ajax(options2);

                        //$('select[name="IdTrademark"]').append('<option value="' + data2.x + '">' + $('#newtrademark').val() + '</option>');
                        //$('#IdTrademark').trigger('change');
                    }
                };
                $.ajax(options);
            } else {
                $('#spannewtrademark').text("Debe ingresar el nombre de la Marca");
            }
        });

        //BOTON PARA GUARDAR EL NUEVO PRODUCTO A LA BASE DE DATOS

        $('#createProd').submit(function(e) {
            var x = this;
            e.preventDefault();

            if (IsValidItem & IsValidItem2 & validcost & validcost2 & validcost3 & $('#idCategory').val() != '' & $('#trademarks').val() != 0) {
                bootbox.confirm({
                    title: "Confirmación",
                    message: "Usted está por agregar un nuevo producto",
                    buttons: {
                        confirm: {
                            label: 'Agregar',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: 'Cancelar',
                            className: 'btn-primary'
                        }
                    },
                    callback: function(result) {
                        if (result) {
                            x.submit();
                        }
                    }
                });
            } else {
                if ($('#idCategory').val() == '') {
                    $('#spancategory').text('Debe seleccionar un Rubro');
                }

                if ($('#trademarks').val() == 0) {
                    $('#spantrademark').text('Debe seleccionar una Marca');
                }
            }
        });

    </script>
}