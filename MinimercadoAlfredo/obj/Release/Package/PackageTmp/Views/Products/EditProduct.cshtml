@using MinimercadoAlfredo.Models
@model MinimercadoAlfredo.Models.Product
@{
    ViewBag.Title = "EditProduct";
}

<h2 class="text-center">Editar Producto</h2>
<hr style="color: grey; border-color: grey" />

<div class="form-horizontal">

    <div class="form-group">
        @Html.LabelFor(model => model.idCategory, "Rubro", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <select class="js-example-basic-single" id="IdCategory" onchange="category()" style="font: small-caption; width: 280px; height: 38px; background-color: beige;">
                <option value="@Model.idCategory">@Model.Category.CategoryName</option>
                @foreach (var item in ViewBag.Categories)
                {
                    if (item.IdCategory != Model.idCategory)
                    {
                        <option value="@item.IdCategory">@item.CategoryName</option>
                    }
                }
            </select>
            <span id="spancategory" style="color: red"></span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.IdTrademark, "Marca", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div>
                <select class="js-example-basic-single" id="IdTrademark" name="IdTrademark" onchange="Marca()" style="font: small-caption; width: 280px; height: 38px; background-color: beige;">
                    <option value="@Model.IdTrademark">@Model.Trademark.TrademarkName</option>
                    @foreach (var item in ViewBag.Trademarks)
                    {
                        if (item.IdTrademark != Model.IdTrademark)
                        {
                            <option value="@item.IdTrademark">@item.TrademarkName</option>
                        }
                    }
                </select>
                <span id="spantrademark" style="color:red"></span>
            </div>

        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductDescription, "Descripción", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="text" id="ProductDescription" class="form-control input-sm" value="@Model.ProductDescription" placeholder="Ingrese la descripción del producto" style="width: 280px" onchange="DescExistente()" oninput="DescExistente()" />
            <span id="spandescexistente" style="color:red"></span>
        </div>

    </div>




    <div class="form-group">
        @Html.LabelFor(model => model.Cost, "Costo", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="number" id="ProductCost" class="form-control input-sm" maxlength="9" value="@Model.Cost" placeholder="Ingrese el costo del Producto" style="width: 280px" onchange="ValidCost()" oninput="ValidCost()" />
            <span id="spanvalidcost" class="text-center" style="color:red"></span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.WholeSalePrice, "Precio", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="number" id="ProductWholeSalePrice" value="@Model.WholeSalePrice" maxlength="9" class="form-control input-sm" style="width: 280px" placeholder="Ingrese el precio del Producto" onchange="ValidCost()" oninput="ValidCost()" />
            <span id="spanwholesaleprice" style="color:red"></span>
            <span id="spanvalidcost2" class="text-center" style="color:red"></span>
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ProductState, "Estado", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="radio col-md-4">
            @if (Model.ProductState)
            {
                <label>
                    <input name="ProductState" id="optionsRadios1" checked type="radio">
                    Activo
                </label>

                <label style="margin-left: 12%">
                    <input name="ProductState" id="optionsRadios2" type="radio">
                    Desactivado
                </label>
            }
            else
            {
                <label>
                    <input name="ProductState" id="optionsRadios1" type="radio">
                    Activo
                </label>

                <label style="margin-left: 12%">
                    <input name="ProductState" id="optionsRadios2" checked type="radio">
                    Desactivado
                </label>
            }
        </div>
        <div class="col-md-2"></div>

    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Minimum, "Stock Mínimo", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="number" id="productMinimum" class="form-control input-sm" value="@Model.Minimum" min="0" maxlength="4" style="width: 280px" placeholder="Ingrese Stock mínimo" />
            <span style="display: inline-flex">El Sistema le avisará cuando el Stock de este Producto sea menor a este valor</span>
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <a href="@Url.Action("Index", "Products")" class="btn btn-primary"><span class="glyphicon glyphicon-arrow-left" aria-hidden="true"></span> Volver</a>

            <button type="button" id="botonGuardar" class="btn btn-success">Guardar &nbsp;<span class="glyphicon glyphicon-floppy-disk"></span></button>
        </div>
    </div>
</div>
<link href="@Url.Content("~/Content/Select2/select2.min.css")" rel="stylesheet" />
@section scripts{
    <script src="@Url.Content("~/Content/Select2/select2.js")"></script>
    <script>
        $(document).ready(function() {
            $(".js-example-basic-single").select2();
        });

        var validcost = true;
        var optionstate;
        var IsValidItem = true;
        var IsValidItem2 = true;
        var IsValidItem3 = true;

        function category() {
            if ($('#ProductDescription').val() != "") {
                DescExistente();
            }

            if ($('#IdCategory').val() == '' | $('#IdCategory').val() == null) {
                $('#spancategory').text('Debe seleccionar un Rubro');
                IsValidItem2 = false;
            } else {
                $('#spancategory').text('');
                IsValidItem2 = true;
            }
        }

        function DescExistente() {

            IsValidItem = true;

            if ($('#ProductDescription').val() != "") {
                $('#spandescexistente').text("");
                var options = {};
                options.url = '@Url.Action("ExisteProd", "Products")';
                options.type = "GET";
                options.data = { "nombre": $("#ProductDescription").val(), "trademark": $("#IdTrademark").val(), "idproduct": @Model.IdProduct, "categ": $('#IdCategory').val() };
                options.dataType = "json";
                options.success = function(data) {
                    if (data) {
                        $('#spandescexistente').text("Producto existente");
                        IsValidItem = false;
                    }
                };
                $.ajax(options);

            } else {
                $('#spandescexistente').text("Debe ingresar la descripción del Producto");
                IsValidItem = false;
            }
        }

        function Marca() {
            if ($('#ProductDescription').val() != "") {
                DescExistente();
            }

            if ($('#IdTrademark').val() == 0) {
                $('#spantrademark').text("Debe seleccionar una Marca");
                IsValidItem3 = false;
            } else {
                IsValidItem3 = true;
                $('#spantrademark').text("");
            }
        }

        function ValidCost() {

            validcost = true;
            var cost = parseFloat($('#ProductCost').val());
            var wholeSalePrice = parseFloat($('#ProductWholeSalePrice').val());

            $('#spanvalidcost').text('');
            $('#spanvalidcost2').text('');

            if ($('#ProductCost').val() != '') {

                if ($('#ProductWholeSalePrice').val() != '') {
                    if (cost > wholeSalePrice) {
                        $('#spanvalidcost').text('El costo de un producto no puede superar al precio.');
                        validcost = false;
                    }
                }

            }
        }

        //BOTÓN GUARDAR PRODUCTO

        $('#botonGuardar').click(function() {
            if (validcost & IsValidItem & IsValidItem2 & IsValidItem3) {

                bootbox.confirm({
                    title: "Confirmación",
                    message: "Usted está por modificar un producto",
                    buttons: {
                        confirm: {
                            label: 'Guardar cambios',
                            className: 'btn-success'
                        },
                        cancel: {
                            label: 'Cancelar',
                            className: 'btn-primary'
                        }
                    },
                    callback: function(result) {
                        if (result) {

                            if ($('#optionsRadios1').is(':checked')) {
                                optionstate = true;
                            } else {
                                optionstate = false;
                            }

                            var product = {
                                IdProduct: @Model.IdProduct,
                                ProductDescription: $('#ProductDescription').val(),
                                Cost: parseFloat($('#ProductCost').val()),
                                WholeSalePrice: parseFloat($('#ProductWholeSalePrice').val()),
                                UploadDate: null,
                                Stock: @Model.Stock,
                                ParcialStock: @Model.ParcialStock,
                                Minimum: parseFloat($('#productMinimum').val()),
                                ProductState: optionstate,
                                idCategory: $('#IdCategory').val(),
                                Category: null,
                                IdTrademark: $('#IdTrademark').val(),
                                Trademark: null,
                                PurchaseLines: null,
                                SaleLines: null,
                                Providers: null,
                                BillLines: null
                            }

                            $.ajax({
                                url: '@Url.Action("EditProduct", "Products")',
                                type: "POST",
                                data: JSON.stringify(product),
                                dataType: "JSON",
                                contentType: "application/json",
                                success: function(d) {
                                    if (d.status) {
                                        var url = '@Url.Action("Index", "Products", new { message = 2})';
                                        window.location.href = url;
                                    }
                                }
                            });
                        }
                    }
                });


            }
        });

    </script>
}